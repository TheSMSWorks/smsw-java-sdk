/*
 * The SMS Works API
 * The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed messages are refunded.
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CancelledMessageResponse;
import org.openapitools.client.model.DeletedMessageResponse;
import org.openapitools.client.model.ErrorModel;
import org.openapitools.client.model.ExtendedErrorModel;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.MessageResponse;
import org.openapitools.client.model.Query;
import org.openapitools.client.model.ScheduledMessageResponse;
import org.openapitools.client.model.ScheduledMessagesResponse;
import org.openapitools.client.model.SendMessageResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MessagesApi
 */
@Disabled
public class MessagesApiTest {

    private final MessagesApi api = new MessagesApi();

    /**
     * Schedules an SMS message to be sent at the date-time you specify
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messageSchedulePostTest() throws ApiException {
        Message smsMessage = null;
        List<ScheduledMessageResponse> response = api.messageSchedulePost(smsMessage);
        // TODO: test validations
    }

    /**
     * Send an SMS Message
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messageSendPostTest() throws ApiException {
        Message smsMessage = null;
        SendMessageResponse response = api.messageSendPost(smsMessage);
        // TODO: test validations
    }

    /**
     * Get failed messages matching your search criteria
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messagesFailedPostTest() throws ApiException {
        Query query = null;
        List<MessageResponse> response = api.messagesFailedPost(query);
        // TODO: test validations
    }

    /**
     * Get unread uncoming messages matching your search criteria
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messagesInboxPostTest() throws ApiException {
        Query query = null;
        List<MessageResponse> response = api.messagesInboxPost(query);
        // TODO: test validations
    }

    /**
     * Delete the message with the mathcing messageid
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messagesMessageidDeleteTest() throws ApiException {
        String messageid = null;
        DeletedMessageResponse response = api.messagesMessageidDelete(messageid);
        // TODO: test validations
    }

    /**
     * Retrieve a logged message by the message ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messagesMessageidGetTest() throws ApiException {
        String messageid = null;
        MessageResponse response = api.messagesMessageidGet(messageid);
        // TODO: test validations
    }

    /**
     * Retrieve up to 1000 messages matching your search criteria
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messagesPostTest() throws ApiException {
        Query query = null;
        List<MessageResponse> response = api.messagesPost(query);
        // TODO: test validations
    }

    /**
     * Returns a list of messages scheduled from your account, comprising any messages scheduled in the last 3 months and any scheduled to send in the future
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messagesScheduleGetTest() throws ApiException {
        ScheduledMessagesResponse response = api.messagesScheduleGet();
        // TODO: test validations
    }

    /**
     * Cancels a scheduled SMS message
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messagesScheduleMessageidDeleteTest() throws ApiException {
        String messageid = null;
        CancelledMessageResponse response = api.messagesScheduleMessageidDelete(messageid);
        // TODO: test validations
    }

    /**
     * Sends an SMS flash message, which appears on the recipients lock screen
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendFlashMessageTest() throws ApiException {
        Message smsMessage = null;
        SendMessageResponse response = api.sendFlashMessage(smsMessage);
        // TODO: test validations
    }

}
