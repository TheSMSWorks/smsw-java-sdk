/*
 * The SMS Works API
 * The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed messages are refunded.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.QueryMetadata;
import java.io.IOException;

/**
 * search parameters for querying the message database
 */
@ApiModel(description = "search parameters for querying the message database")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-13T15:06:56.412+01:00")
public class Query {
  @SerializedName("status")
  private String status = null;

  @SerializedName("destination")
  private String destination = null;

  @SerializedName("sender")
  private String sender = null;

  @SerializedName("keyword")
  private String keyword = null;

  @SerializedName("from")
  private String from = null;

  @SerializedName("to")
  private String to = null;

  @SerializedName("metadata")
  private QueryMetadata metadata = null;

  public Query status(String status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the messages you would like returned (either &#39;SENT&#39;, &#39;DELIVERED&#39;, &#39;EXPIRED&#39;, &#39;DELETED&#39;, &#39;UNDELIVERABLE&#39;, &#39;ACCEPTED&#39;, &#39;UNKNOWN&#39;, &#39;REJECTED&#39;)
   * @return status
  **/
  @ApiModelProperty(example = "SENT", value = "The status of the messages you would like returned (either 'SENT', 'DELIVERED', 'EXPIRED', 'DELETED', 'UNDELIVERABLE', 'ACCEPTED', 'UNKNOWN', 'REJECTED')")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Query destination(String destination) {
    this.destination = destination;
    return this;
  }

   /**
   * The phone number of the recipient. Start UK numbers with 44 and drop the leading 0.
   * @return destination
  **/
  @ApiModelProperty(example = "447777777777", value = "The phone number of the recipient. Start UK numbers with 44 and drop the leading 0.")
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public Query sender(String sender) {
    this.sender = sender;
    return this;
  }

   /**
   * The sender of the message (this can be the configured sender name for an outbound message or the senders phone number for an inbound message).
   * @return sender
  **/
  @ApiModelProperty(example = "YourCompany", value = "The sender of the message (this can be the configured sender name for an outbound message or the senders phone number for an inbound message).")
  public String getSender() {
    return sender;
  }

  public void setSender(String sender) {
    this.sender = sender;
  }

  public Query keyword(String keyword) {
    this.keyword = keyword;
    return this;
  }

   /**
   * The keyword used in the inbound message
   * @return keyword
  **/
  @ApiModelProperty(example = "SKYWALKER", value = "The keyword used in the inbound message")
  public String getKeyword() {
    return keyword;
  }

  public void setKeyword(String keyword) {
    this.keyword = keyword;
  }

  public Query from(String from) {
    this.from = from;
    return this;
  }

   /**
   * The date-time from which you would like matching messages
   * @return from
  **/
  @ApiModelProperty(example = "Wed Jul 12 2017 20:26:28 GMT+0100 (BST)", value = "The date-time from which you would like matching messages")
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }

  public Query to(String to) {
    this.to = to;
    return this;
  }

   /**
   * The date-time to which you would like matching messages
   * @return to
  **/
  @ApiModelProperty(example = "Wed Jul 19 2017 20:26:28 GMT+0100 (BST)", value = "The date-time to which you would like matching messages")
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }

  public Query metadata(QueryMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public QueryMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(QueryMetadata metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Query query = (Query) o;
    return Objects.equals(this.status, query.status) &&
        Objects.equals(this.destination, query.destination) &&
        Objects.equals(this.sender, query.sender) &&
        Objects.equals(this.keyword, query.keyword) &&
        Objects.equals(this.from, query.from) &&
        Objects.equals(this.to, query.to) &&
        Objects.equals(this.metadata, query.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, destination, sender, keyword, from, to, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Query {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    keyword: ").append(toIndentedString(keyword)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

